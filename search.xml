<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>欸嘿</title>
    <url>/2020/11/02/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E5%98%BF%E5%98%BF/</url>
    <content><![CDATA[<h1 id="我的第一篇博客嘿嘿"><a href="#我的第一篇博客嘿嘿" class="headerlink" title="我的第一篇博客嘿嘿"></a>我的第一篇博客嘿嘿</h1><h2 id="第一章节"><a href="#第一章节" class="headerlink" title="第一章节"></a>第一章节</h2><p>内容</p>
<p>内容</p>
<p>内容</p>
<p><img src="/2020/11/02/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E5%98%BF%E5%98%BF/Study\blog\source_posts\res\image-20201103140549927.png" alt="image-20201103140549927"></p>
<h2 id="第二章节"><a href="#第二章节" class="headerlink" title="第二章节"></a>第二章节</h2><p>内容</p>
<p>内容</p>
<p>内容</p>
<h2 id="第三章节"><a href="#第三章节" class="headerlink" title="第三章节"></a>第三章节</h2><p>内容</p>
<p>内容</p>
<p>内容</p>
]]></content>
      <categories>
        <category>web前</category>
      </categories>
  </entry>
  <entry>
    <title>第八章 内存管理</title>
    <url>/2020/11/06/%E7%AC%AC%E5%85%AB%E7%AB%A0%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p>第八章 内存管理</p>
<p>8.1背景</p>
<p>8.1.1基本硬件</p>
<p>高速缓存</p>
<p>将信息复制到更快的存储系统<br>访问时，请首先检查缓存，<br>如果在：直接使用<br>不在：从上层存储系统获取，并将副本保留在缓存中<br>使用缓存<br>寄存器为主存储器提供高速缓存<br>指令缓存和数据缓存<br>主内存可以视为辅助存储的快速缓存</p>
<p>必须将程序（从磁盘）带入内存并放置在进程中才能运行<br>主存储器和寄存器仅是存储CPU可以直接访问<br>一个CPU时钟（或更少）中的Registeraccess<br>主内存可能需要很多周期（几个CPU时钟）<br>缓存在主内存和CPU寄存器之间进行<br>内存的保护需要保证正确的操作</p>
<p>内存保护<br>基地址寄存器和界限地址寄存器定义了逻辑地址空间<br>√基地址寄存器＋界限地址寄存器<br>√外部存储器受到保护<br>√操作系统可以不受限制地访问显示器和用户的内存<br>√只有操作系统可以通过特殊的特权指令，才能加载基地址寄存器和界限地址寄存器。</p>
<p>8.1.2地址绑定</p>
<p>将指令和数据绑定到内存<br>符号地址到可重定位地址<br>可重定位地址到绝对地址<br>指令和数据到内存地址的地址绑定可以分为三个不同的阶段</p>
<p>通常，指令和数据绑定到存储器地址可在沿途的任何一步进行：</p>
<p>编译时：若编译时就已经知道程序的驻留地址，就可以生成绝对代码</p>
<p>如果内存位置被称为先验，则可以生成绝对代码（absolute code）；<br>如果起始位置更改，则必须重新编译代码；<br>示例：MS-DOS .COM格式程序</p>
<p>加载时：（可重定位代码）<br>如果在编译时不知道内存位置，则必须生成可重定位代码（可重定位代码）</p>
<p>执行时：</p>
<p>若进程可以在执行时从一个内存段转移到另一个内存段，那么绑定应当延迟到执行时才进行，采用这种方案需要特定硬件，大多数通用计算机操作系统采用该方法。</p>
<p>用户程序的多步骤处理：</p>
<p><img src="/2020/11/06/%E7%AC%AC%E5%85%AB%E7%AB%A0%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/image-20201106165942906.png" alt="image-20201106165942906"></p>
<p>8.1.3逻辑地址空间与物理地址空间</p>
<p>CPU生成的地址通常称为逻辑地址，而内存单元看到的地址（即加载到内存地址寄存器的地址）通常称为物理地址。</p>
<p>编译时和加载时的地址绑定方法生成相同的逻辑地址和物理地址。但是执行时的地址绑定方案生成不同的逻辑地址和物理地址，在该情况下通常称逻辑地址为虚拟地址。由程序生成的所有逻辑地址的集合称为逻辑地址空间，这些逻辑地址对应的所有物理地址的集合称为物理地址空间。</p>
<p>内存管理单元（MMU）<br>将虚拟地址映射到物理地址的硬件设备<br>在MMU方案中，重定位寄存器中的值被添加到用户进程当时生成的每个地址中，然后将其发送到内存中。<br>用户程序处理逻辑地址； 它从来没有看到真正的物理地址。</p>
<p>使用重定位寄存器的动态重定位：</p>
<p><img src="/2020/11/06/%E7%AC%AC%E5%85%AB%E7%AB%A0%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/image-20201106171429922.png" alt="image-20201106171429922"></p>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/11/02/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
